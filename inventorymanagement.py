# -*- coding: utf-8 -*-
"""InventoryManagement.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HJYAEHMJz7Ssm2R35YsooNp_7gRVNd6F
"""

import numpy as np
np.random.seed(10)

m = int (input())
n = int (input())
#Take m,n as input

beginning_inventory = 3
demand = 0
ending_inventory = 0
ending_inventory_list = [0]
total_ending_inventory = 0
shortage_quantity = 0
order_quantity = 8
days_until_next_arrival = 2
shortage_days_count = 0

for cycle in range(1, m):
    print("Cycle No: ", cycle)
    for day in range(1, n+1):
        print("Day: ", day)
        # Calculate beginning inventory (beginning inventory + quantity arrived)
        # Write code here
        if (days_until_next_arrival == -1):
            beginning_inventory += order_quantity
        # Today's demand
        daily_demand = np.random.choice([0,1,2,3,4], p=[0.10,0.25,0.35,0.21,0.09])
        total_demand = daily_demand + shortage_quantity

        if (total_demand <= beginning_inventory):
            ending_inventory = beginning_inventory - total_demand
            shortage_quantity = 0
        else:
            extra_demand = total_demand - beginning_inventory
            shortage_quantity = extra_demand
            ending_inventory = 0
            # Count shortage days
            shortage_days_count += 1
        
        ending_inventory_list.append(ending_inventory)
        total_ending_inventory += ending_inventory
        # print Beginning inventory, Daily demand, Ending inventory, Shortage quantity

        print("Beginning Inventory = ",beginning_inventory,"  Daily demand: " ,total_demand, " Ending Inventory: ",ending_inventory, " Shortage Quantity: ",shortage_quantity )
        if (day==n):
            # Review day
            order_review = m - ending_inventory
            # Place order
            # Find order quantity
            order_quantity = shortage_quantity + order_review
            # Generate random Lead time
            days_until_next_arrival = np.random.choice([1,2,3], p = [0.6,0.3,0.1])
            # days_until_next_arrival, order_quantity set
        
        beginning_inventory = ending_inventory
        
        days_until_next_arrival -= 1


# Avg ending inventory
avg_ending_inventory = total_ending_inventory / ((m-1) * n)

print("\nAverage ending inventory: ",avg_ending_inventory)
# Shortage day
print("Shortage day:", shortage_days_count)
# Ending inventory plot

import matplotlib.pyplot as plt

plt.plot(ending_inventory_list)
plt.xlabel('day number')
plt.ylabel('Ending_inventory of each day')
plt.show